{"version":3,"sources":["reducers/userRed.js","components/login/Login.jsx","actions/user.js","components/navigation-and-search-components/header.jsx","components/lists/feeds.jsx","components/navigation-and-search-components/navCreatePost.jsx","App.js","reportWebVitals.js","reducers/index.js","index.js"],"names":["LOGOUT","USERS_LIST","defaultState","currentUser","isAuth","list","setList","user","type","payload","Login","props","useState","name","password","form","setForm","changeHandler","event","target","value","dispatch","useDispatch","className","placeholder","id","onChange","length","to","onClick","username","a","axios","get","response","data","localStorage","setItem","token","alert","setCurrentName","Header","useSelector","state","href","data-target","Users","items","setItems","remove","setRemove","deleteCss","setDeleteCss","feeds","arrFeeds","feedRemove","setArrFeeds","parser","Parser","useEffect","parseURL","rssUrl","err","feed","e","console","log","window","M","toast","html","result","sort","b","Date","isoDate","arr","filter","item","link","map","i","setRssUrl","title","content","NavCreatePost","url","groupInf","setGroupInf","createGroupInf","modal","test","concat","App","curentName","removeItem","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c4d9a87.chunk.js","sourcesContent":["const LOGOUT = \"LOG_OUT\"\r\nconst USERS_LIST = \"USERS_LIST\"\r\n\r\n\r\n\r\nconst defaultState = {\r\n    currentUser: {},\r\n    isAuth: false,\r\n    list: true,\r\n}\r\n\r\nexport default function userReducer(state = defaultState, action) {\r\n    switch (action.type) {\r\n        case USERS_LIST:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload,\r\n                isAuth: true,\r\n                list: true,\r\n            }\r\n        case LOGOUT:\r\n            localStorage.removeItem(\"token\")\r\n            return {\r\n                ...state,\r\n                currentUser: {},\r\n                isAuth: false,\r\n                list: false,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setList = user => ({ type: USERS_LIST, payload: user })\r\n\r\nexport const logOut = () => ({ type: LOGOUT })","import React, { useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { login } from \"../../actions/user\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nexport const Login = (props) => {\r\n    const [form, setForm] = useState({\r\n        name: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const changeHandler = event => {\r\n        setForm({\r\n            ...form, [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s6 offset-s3\">\r\n                <div className=\"card blue darken-1\">\r\n                    <div className=\"card-content white-text\">\r\n                        <div>\r\n                            <div className=\"input-field \">\r\n                                <input\r\n                                    placeholder=\"name\"\r\n                                    id=\"name\"\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    onChange={changeHandler}\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-field \">\r\n                                <input\r\n                                    placeholder=\"password\"\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    onChange={changeHandler}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        {form.password.length < 4 ? <button\r\n                            className=\" btn greey \"\r\n                        >\r\n                            LOG IN\r\n                        </button> :\r\n                            <NavLink to=\"/feedList\"><button\r\n                                className=\" btn yellow \"\r\n                                onClick={() => {\r\n                                    dispatch(login(form.name))\r\n                                    props.setCurrentName(form.name)\r\n                                }}\r\n                            >\r\n                                LOG IN\r\n                            </button></NavLink>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import axios from \"axios\"\r\nimport { setList } from \"../reducers/userRed\"\r\n\r\n\r\nexport const login = (username, password) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get(`https://jsonplaceholder.typicode.com/users?username=${username}`)\r\n            dispatch(setList(response.data))\r\n            localStorage.setItem(\"token\", response.data.token)\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const Auth = (username) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get(`https://jsonplaceholder.typicode.com/users?username=${username}`)\r\n            dispatch(setList(response.data))\r\n            localStorage.setItem(\"token\", response.data.token)\r\n        } catch (error) {\r\n            localStorage.removeItem(\"token\")\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { NavLink } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { logOut } from \"../../reducers/userRed\"\r\n\r\nexport const Header = () => {\r\n    const isAuth = useSelector(state => state.user.isAuth)\r\n    const dispatch = useDispatch()\r\n    return <div className=\"card\">\r\n        <div className=\"card-content nav-wrapper blue-grey darken-1\">\r\n            <nav className=\" blue-grey darken-1\">\r\n\r\n                <a href=\"#!\" className=\"brand-logo\"> <span>RSS feed reader</span></a>\r\n                <a href=\"#\" data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">Onlyne readera</i></a>\r\n                <ul className=\"right hide-on-med-and-down\">\r\n\r\n                    {!isAuth &&\r\n                        <div>\r\n                            <li><NavLink to=\"/\">Log in</NavLink></li>\r\n                        </div>\r\n                    }\r\n\r\n                    {isAuth &&\r\n                        <div>\r\n                            <button className=\"btn\" onClick={() => dispatch(logOut())} > <NavLink to=\"/\"> Log out </NavLink></button>\r\n                        </div>\r\n                    }\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    </div>\r\n}","import { useSelector } from \"react-redux\"\r\nimport { useState, useEffect } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport Parser from \"rss-parser\"\r\n\r\nexport const Users = (props) => {\r\n\r\n    const currentUser = useSelector(state => state.user.currentUser[0])\r\n    const [items, setItems] = useState([]);\r\n    const [remove, setRemove] = useState(\"\")\r\n    const [deleteCss, setDeleteCss] = useState(\"blocknone\")\r\n\r\n    const feeds = props.arrFeeds\r\n    const feedRemove = props.setArrFeeds\r\n\r\n    const CORS_PROXY = \"https://cors.bridged.cc/\"\r\n\r\n    const parser = new Parser();\r\n\r\n    const classCheck = (link) => {\r\n        if (props.rssUrl === link) {\r\n            return \"feedsCheck\"\r\n        } else {\r\n            return \"feeds\"\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            parser.parseURL(CORS_PROXY + props.rssUrl, function (err, feed) {\r\n                if (err) throw err;\r\n                setItems(feed.items);\r\n            })\r\n        } catch (e) {\r\n            console.log(e);\r\n            window.M.toast({ html: \"URL is not defined\" })\r\n        }\r\n    }, [props.rssUrl])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"sort__div\">\r\n                <p className=\"welcome\">\r\n                    Welcome, {currentUser.name}\r\n                </p>\r\n                <div>\r\n                    <button className=\"btn yellow\"> <NavLink to=\"/addFeed\" >Add new feed</NavLink></button>\r\n                    <button className=\"btn blue\" onClick={() => {\r\n                        const result = [...items].sort((a, b) => new Date(b.isoDate) - new Date(a.isoDate))\r\n                        setItems(result)\r\n                    }\r\n                    }>Sort for date\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"main\">\r\n                <div className=\"title\">\r\n\r\n                    <div className={deleteCss} onClick={() => setDeleteCss(\"blocknone\")}>\r\n\r\n                        <p className=\"confirm\">Are you sure you want to delete feed?</p>\r\n                        <div>\r\n                            <button className=\"btn red\" onClick={() => {\r\n                                feedRemove(arr => arr.filter(item => item.link !== remove))\r\n                            }\r\n                            }>Confirm</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {feeds.map((feed, i) => {\r\n                        return (\r\n                            <div className={classCheck(feed.link)} onClick={() => props.setRssUrl(feed.link)} key={i} >\r\n                                <p className=\"feed\" >{feed.name}</p>\r\n                                <button className=\"feed__delete\" onClick={() => {\r\n                                    setRemove(feed.link)\r\n                                    setDeleteCss(\"delete\")\r\n                                }}></button>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n                <div className=\"link\">\r\n                    {items.map((item, i) => {\r\n                        return (\r\n                            <div className=\"item\" key={i}>\r\n                                <a target=\"_blank\" className=\"item__title\" href={item.link}>\r\n                                    <p>{item.title}</p>\r\n                                </a>\r\n                                <p className=\"description\">{item.content}</p>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nexport const NavCreatePost = (props) => {\r\n    const [groupInf, setGroupInf] = useState({\r\n        name: \"\",\r\n        link: \"\",\r\n    })\r\n\r\n    const createGroupInf = (event) => {\r\n        setGroupInf({\r\n            ...groupInf, [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const testURL = (url) => {\r\n        const urlRegex = /(http|ftp|https):\\/\\/[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&amp;:\\/~+#-]*[\\w@?^=%&amp;\\/~+#-])?/;\r\n        if (!urlRegex.test(url)) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return <div className={props.modal}>\r\n        <div className=\"card  darken-1 black-text\">\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col s6 offset-s3\">\r\n                    <h2>Add new feed item</h2>\r\n                    <div className=\"card blue darken-1\">\r\n                        <div className=\"card-content white-text\">\r\n                            <div>\r\n\r\n                                <div className=\"input-field \">\r\n                                    <input\r\n                                        placeholder=\"feed name\"\r\n                                        id=\"name\"\r\n                                        type=\"text\"\r\n                                        name=\"name\"\r\n                                        onChange={createGroupInf}\r\n                                    />\r\n\r\n                                </div>\r\n\r\n                                <div className=\"input-field \">\r\n                                    <input\r\n                                        placeholder=\"feed URL\"\r\n                                        id=\"link\"\r\n                                        type=\"text\"\r\n                                        name=\"link\"\r\n                                        onChange={createGroupInf}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-action\">\r\n                            {(groupInf.name === \"\" ||\r\n                                testURL(groupInf.link)) === false ?\r\n                                <NavLink to=\"/feedList\" >\r\n                                    <button\r\n                                        className=\"btn yellow\"\r\n                                        onClick={() => {\r\n                                            props.setArrFeeds(items => items.concat(groupInf))\r\n                                            props.setRssUrl(groupInf.link)\r\n                                            setGroupInf({\r\n                                                name: \"\",\r\n                                                link: \"\",\r\n                                            })\r\n                                        }} >\r\n                                        ADD\r\n                                    </button>\r\n                                </NavLink>\r\n                                :\r\n                                <button\r\n                                    className=\"btn grey\"\r\n                                    onClick={() => {\r\n                                        window.M.toast({ html: \"make sure that all lines are filled in the second field correct URL\" })\r\n                                    }} >\r\n                                    Add\r\n                                </button>\r\n                            }\r\n                            <NavLink to=\"/feedList\" >\r\n                                <button className=\"btn greey\" >\r\n                                    Cancel\r\n                                </button>\r\n                            </NavLink>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div >\r\n}","import React, { useEffect } from \"react\"\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\r\nimport { Login } from \"./components/login/Login.jsx\"\r\nimport { Header } from \"./components/navigation-and-search-components/header.jsx\"\r\nimport \"materialize-css\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Users } from \"./components/lists/feeds\"\r\nimport { NavCreatePost } from \"./components/navigation-and-search-components/navCreatePost\"\r\nimport { useState } from \"react\"\r\nimport { Auth } from \"./actions/user\"\r\n\r\nfunction App() {\r\n\r\n  const [arrFeeds, setArrFeeds] = useState(() => [{\r\n    name: \"NASA\",\r\n    link: \"https://www.nasa.gov/rss/dyn/breaking_news.rss\"\r\n  },\r\n  {\r\n    name: \"CNN-edition\",\r\n    link: \"http://rss.cnn.com/rss/edition.rss\"\r\n  },\r\n  {\r\n    name: \"NY-times\",\r\n    link: \"http://feeds.nytimes.com/nyt/rss/HomePage\"\r\n  }])\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  const [rssUrl, setRssUrl] = useState(\"https://www.nasa.gov/rss/dyn/breaking_news.rss\");\r\n\r\n  const [curentName, setCurrentName] = useState(\"\")\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const isAuth = useSelector(state => state.user.isAuth)\r\n\r\n  useEffect(() => {\r\n    if (isAuth) {\r\n      dispatch(Auth(curentName))\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"container\" >\r\n        <Header setItems={setItems} />\r\n        {!isAuth ?\r\n          <Switch>\r\n            <Route exact path={\"/\"} component={() => <Login\r\n              setCurrentName={setCurrentName}\r\n            />} />\r\n          </Switch>\r\n          :\r\n          <Switch>\r\n            <Route exact path={\"/feedList\"} component={() => <Users\r\n              setItems={setItems}\r\n              items={items}\r\n              arrFeeds={arrFeeds}\r\n              setArrFeeds={setArrFeeds}\r\n              rssUrl={rssUrl}\r\n              setRssUrl={setRssUrl}\r\n            />} />\r\n\r\n            <Route exact path={\"/addFeed\"} component={() => <NavCreatePost\r\n              setArrFeeds={setArrFeeds}\r\n              arrFeeds={arrFeeds}\r\n              setRssUrl={setRssUrl}\r\n            />} />\r\n          </Switch>\r\n        }\r\n      </div>\r\n    </BrowserRouter >\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport thunk from \"redux-thunk\"\r\nimport userReducer from \"./userRed\"\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store } from \"./reducers\"\r\nimport { Provider } from \"react-redux\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}