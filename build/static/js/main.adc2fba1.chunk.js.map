{"version":3,"sources":["reducers/userRed.js","actions/user.js","components/registration-and-login/registration.jsx","components/registration-and-login/Login.jsx","components/navigation-and-search-components/header.jsx","components/lists/user.jsx","components/lists/users.jsx","components/navigation-and-search-components/navCreatePost.jsx","actions/file.js","App.js","reportWebVitals.js","reducers/index.js","index.js"],"names":["SET_USER","LOGOUT","USERS_LIST","GROUPS_LIST","defaultState","currentUser","isAuth","list","setList","user","type","payload","registration","email","password","name","a","axios","post","response","window","M","toast","html","data","message","Auth","dispatch","get","headers","Authorization","localStorage","getItem","setItem","token","removeItem","Registration","useState","form","setForm","changeHandler","event","target","value","className","placeholder","id","onChange","htmlFor","onClick","Login","useDispatch","length","console","log","alert","Header","props","useSelector","state","href","data-target","to","setModal","User","reName","setReName","active","setActive","comment","setComment","date","Date","toLocaleString","currentId","volid","delListItem","_id","modal","src","imgURL","alt","size","weidht","discription","slice","count","Update","productId","description","comments","map","author","Users","items","current","NavCreatePost","groupInf","setGroupInf","createGroupInf","createGroup","modalWindow","App","useEffect","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAAMA,EAAW,WACXC,EAAS,UACTC,EAAa,aACbC,EAAc,eAGdC,EAAe,CACjBC,YAAa,GACbC,QAAQ,EACRC,MAAM,GAuCH,IAEMC,EAAU,SAAAC,GAAI,MAAK,CAAEC,KAAMR,EAAYS,QAASF,IC5ChDG,EAAY,uCAAG,WAAOC,EAAOC,EAAUC,GAAxB,eAAAC,EAAA,+EAGGC,IAAMC,KAAK,2DAA4D,CAC1FL,QACAC,WACAC,SANgB,OAGdI,EAHc,OASpBC,OAAOC,EAAEC,MAAM,CAAEC,KAAMJ,EAASK,KAAKC,UATjB,gDAYpBL,OAAOC,EAAEC,MAAM,CAAEC,KAAM,KAAMJ,SAASK,KAAKC,UAZvB,yDAAH,0DAwEZC,EAAO,WAChB,8CAAO,WAAMC,GAAN,eAAAX,EAAA,+EAEwBC,IAAMW,IAAN,mDAA8D,CACjFC,QAAS,CAAEC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,aAH9D,OAEOb,EAFP,OAMCQ,EAASnB,EAAQW,EAASK,OAE1BO,aAAaE,QAAQ,QAASd,EAASK,KAAKU,OAR7C,gDAUCH,aAAaI,WAAW,SAVzB,yDAAP,uD,0BCxESC,EAAe,WAAO,IAAD,EACNC,mBAAS,CAC7BxB,MAAO,GACPC,SAAU,GACVC,KAAM,KAJoB,mBACvBuB,EADuB,KACjBC,EADiB,KAOxBC,EAAgB,SAAAC,GAElBF,EAAQ,2BACDD,GADA,kBACOG,EAAMC,OAAO3B,KAAO0B,EAAMC,OAAOC,UAKnD,OACI,qBAAKC,UAAU,MAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,8CACA,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,0BAAf,SAEI,gCAEI,sBAAKA,UAAU,eAAf,UACI,uBACIC,YAAY,QACZC,GAAG,QACHpC,KAAK,OACLK,KAAK,QACLgC,SAAUP,IAEd,uBAAOQ,QAAQ,QAAf,sBAIJ,sBAAKJ,UAAU,eAAf,UACI,uBACIC,YAAY,WACZC,GAAG,WACHpC,KAAK,WACLK,KAAK,WACLgC,SAAUP,IAEd,uBAAOQ,QAAQ,WAAf,yBAGJ,sBAAKJ,UAAU,eAAf,UACI,uBACIC,YAAY,WACZC,GAAG,OACHpC,KAAK,OACLK,KAAK,OACLgC,SAAUP,IAEd,uBAAOQ,QAAQ,OAAf,0BAKZ,qBAAKJ,UAAU,cAAf,SAGI,wBACIA,UAAU,aACVK,QAAS,WACLrC,EACI0B,EAAKzB,MACLyB,EAAKxB,SACLwB,EAAKvB,OANjB,2FClEXmC,EAAQ,WAAO,IAAD,EACCb,mBAAS,CAC7BxB,MAAO,GACPC,SAAU,KAHS,mBAChBwB,EADgB,KACVC,EADU,KAMjBC,EAAgB,SAAAC,GAClBF,EAAQ,2BACDD,GADA,kBACOG,EAAMC,OAAO3B,KAAO0B,EAAMC,OAAOC,UAK7ChB,EAAWwB,cAEjB,OACI,qBAAKP,UAAU,MAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,wCACA,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,0BAAf,SAEI,gCAEI,sBAAKA,UAAU,eAAf,UACI,uBACIC,YAAY,QACZC,GAAG,QACHpC,KAAK,OACLK,KAAK,QACLgC,SAAUP,IAEd,uBAAOQ,QAAQ,QAAf,sBAIJ,sBAAKJ,UAAU,eAAf,UACI,uBACIC,YAAY,WACZC,GAAG,WACHpC,KAAK,WACLK,KAAK,WACLgC,SAAUP,IAEd,uBAAOQ,QAAQ,WAAf,8BAKZ,qBAAKJ,UAAU,cAAf,SAGKN,EAAKxB,SAASsC,OAAS,EAAI,wBACxBR,UAAU,cADc,kBAIpB,wBACJA,UAAU,eACVK,QAAS,kBAAMtB,GFrCrBd,EEqCoCyB,EAAKzB,MFrClCC,EEqCyCwB,EAAKxB,SFpCvE,uCAAO,WAAMa,GAAN,eAAAX,EAAA,+EAEwBC,IAAMC,KAAK,oDAAqD,CACnFL,QAAOC,aAHZ,OAEOK,EAFP,OAKCkC,QAAQC,IAAI,QAASnC,EAASK,MAC9BG,EAASnB,EAAQW,EAASK,OAC1BO,aAAaE,QAAQ,QAASd,EAASK,KAAKU,OAP7C,gDASCqB,MAAM,EAAD,IATN,yDAAP,wDADiB,IAAC1C,EAAOC,GEmCG,6BCpDnB0C,EAAS,SAACC,GACnB,IAAMnD,EAASoD,aAAY,SAAAC,GAAK,OAAIA,EAAMlD,KAAKH,UACzCqB,EAAWwB,cACjB,OAAO,qBAAKP,UAAU,OAAf,SACH,qBAAKA,UAAU,8CAAf,SACI,sBAAKA,UAAU,sBAAf,UAEI,oBAAGgB,KAAK,KAAKhB,UAAU,aAAvB,cAAqC,kDACrC,mBAAGgB,KAAK,IAAIC,cAAY,cAAcjB,UAAU,kBAAhD,SAAkE,mBAAGA,UAAU,iBAAb,2BAClE,qBAAIA,UAAU,6BAAd,WAEMtC,GAAU,6BAAI,cAAC,IAAD,CAASwD,GAAG,SAAZ,uBACdxD,GAAU,6BAAI,cAAC,IAAD,CAASwD,GAAG,gBAAZ,4BAEfxD,GACG,gCACI,wBAAQsC,UAAU,YAAYK,QAAS,kBAAMtB,EHuErE,uCAAO,WAAMA,GAAN,eAAAX,EAAA,+EAEwBC,IAAMW,IAAN,uDAAkE,CACrFC,QAAS,CAAEC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,aAH9D,OAEOb,EAFP,OAMCQ,EAASnB,EAAQW,EAASK,OAE1BO,aAAaE,QAAQ,QAASd,EAASK,KAAKU,OAR7C,gDAUCH,aAAaI,WAAW,SAVzB,yDAAP,wDGvEwB,sBACA,wBAAQS,UAAU,YAAYK,QAAS,kBAAMtB,EHsFrE,uCAAO,WAAMA,GAAN,eAAAX,EAAA,+EAEwBC,IAAMW,IAAN,wDAAmE,CACtFC,QAAS,CAAEC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,aAH9D,OAEOb,EAFP,OAMCQ,EAASnB,EAAQW,EAASK,OAE1BO,aAAaE,QAAQ,QAASd,EAASK,KAAKU,OAR7C,gDAUCH,aAAaI,WAAW,SAVzB,yDAAP,wDGtFwB,4BACA,wBAAQS,UAAU,YAAYK,QAAS,kBAAMtB,EAASD,MAAtD,0BACA,wBAAQkB,UAAU,cAAcK,QAAS,kBAAMQ,EAAMM,SAAS,eAA9D,sBACA,wBAAQnB,UAAU,MAAMK,QAAS,kBAAMtB,EJ0BtC,CAAEjB,KAAMT,KI1BT,mCCnBf+D,EAAO,SAACP,GAAW,IAAD,EACCpB,mBAAS,CACjC5B,KAAMgD,EAAMhD,KAAKM,OAFM,mBACpBkD,EADoB,KACZC,EADY,OAKC7B,mBAAS,sBALV,mBAKpB8B,EALoB,KAKZC,EALY,OAOG/B,mBAAS,IAPZ,mBAOpBgC,EAPoB,KAOXC,EAPW,KASrB7D,EAAOgD,EAAMhD,KAEb8D,GAAO,IAAIC,MAAOC,iBAWlBC,EAAYhB,aAAY,SAAAC,GAAK,OAAIA,EAAMlD,KAAKJ,YAAYI,KAAKqC,MAe7DnB,EAAWwB,cAGXwB,EAAQ,WACVhD,EJSmB,SAACmB,EAAI4B,GAC5B,8CAAO,WAAM/C,GAAN,eAAAX,EAAA,+EAEwBC,IAAMC,KAAN,sDAAkE,CACrF4B,KAAI4B,cAHT,OAEOvD,EAFP,OAMCC,OAAOC,EAAEC,MAAM,CAAEC,KAAMJ,EAASK,KAAKC,UACrCE,EAASnB,EAAQW,EAASK,OAE1BO,aAAaE,QAAQ,QAASd,EAASK,KAAKU,OAT7C,gDAWCqB,MAAM,EAAD,IAXN,yDAAP,sDIVaqB,CAAYnE,EAAKoE,IAAKH,KAenC,OAAO,qBAAK9B,UA1CY,YAAhBa,EAAMqB,MACC,WAEA,OAuCR,SAGH,sBAAKlC,UAAU,OAAf,UACI,sBAAKA,UAAU,eAAf,UAGI,wCAAWnC,EAAKM,QAChB,qBAAKgE,IAAKtE,EAAKuE,OAAQC,IAAKxE,EAAKM,OACjC,yCAAYN,EAAKyE,QACjB,6CAAgBzE,EAAK0E,UACrB,sBAEA,6CACA,oBAAGvC,UAAU,cAAb,UAA6BnC,EAAK2E,YAAYC,MAAM,EAAG,KAAvD,eAKJ,sBAAKzC,UAAU,eAAf,UAGI,wBAAQA,UAAU,0CAAlB,yBAGY,yBAAXuB,EACG,wBAAQvB,UAAU,2BAA2BK,QAAS,kBAAMmB,EAAU,uBAAtE,mBAEA,wBAAQxB,UAAU,yBAAyBK,QAAS,kBAAMmB,EAAU,yBAApE,oBAGJ,sBAAKxB,UAAWuB,EAAhB,UACI,4EACA,wBAAQvB,UAAU,uBAAuBK,QAAS,WAC9C0B,IACAP,EAAU,uBAFd,0BAWR,sBAAKxB,UAAU,cAAf,UACI,sBAAMA,UAAU,qCAAhB,SAAqD,mBAAGA,UAAU,QAAb,qBACrD,sBAAKA,UAAU,MAAf,UAEI,sBAAKA,UAAU,eAAf,UACI,4CAEA,iDAAoBnC,EAAK0E,UACzB,+CAAkB1E,EAAKyE,QACvB,gDAAmBzE,EAAK6E,SACxB,6CACA,mBAAG1C,UAAU,cAAb,SAA6BnC,EAAK2E,iBAGtC,sBAAKxC,UAAU,eAAf,UACI,6CACA,2PAIA,sBAAKA,UAAU,eAAf,UACI,uBACIE,GAAG,cACHpC,KAAK,OACLK,KAAK,OACLgC,SApGT,SAAAN,GACfyB,EAAU,2BACHD,GADE,kBACOxB,EAAMC,OAAO3B,KAAO0B,EAAMC,OAAOC,YAoG7B,uBAAOK,QAAQ,WAAf,+BAMR,qBAAKJ,UAAU,eAAf,SACI,wBAAQA,UAAU,yCAAyCK,QAzFtD,WACrBtB,EJbc,SAACZ,EAAM+B,EAAI4B,GAC7B,8CAAO,WAAM/C,GAAN,eAAAX,EAAA,+EAEwBC,IAAMC,KAAN,qDAAiE,CACpFH,OAAM+B,KAAI4B,cAHf,OAEOvD,EAFP,OAMCQ,EAASnB,EAAQW,EAASK,OAC1BO,aAAaE,QAAQ,QAASd,EAASK,KAAKU,OAP7C,gDASCqB,MAAM,EAAD,IATN,yDAAP,sDIYagC,CAAOtB,EAAOxD,KAAMA,EAAKoE,IAAKH,KAwFvB,sBAIJ,sBAAK9B,UAAU,eAAf,UACI,6CACA,2PAIA,sBAAKA,UAAU,eAAf,UACI,uBACIE,GAAG,UACHpC,KAAK,OACLK,KAAK,UACLgC,SAtHZ,SAAAN,GACZ6B,EAAW,2BACJD,GADG,kBACO5B,EAAMC,OAAO3B,KAAO0B,EAAMC,OAAOC,YAsH9B,uBAAOK,QAAQ,UAAf,2BAMR,qBAAKJ,UAAU,eAAf,SACI,wBAAQA,UAAU,yCAAyCK,QA5G5D,WJ6GhB,IAAuBH,EAAI0C,EAAWC,EAAajE,EI5GlDG,GJ4GsBmB,EI5GC4B,EJ4GGc,EI5GQ/E,EAAKoE,IJ4GFY,EI5GOpB,EAAQA,QJ4GF7C,EI5GW+C,EJ6GjE,uCAAO,WAAM5C,GAAN,eAAAX,EAAA,+EAEwBC,IAAMC,KAAN,uDAAmE,CACtF4B,KAAI0C,YAAWC,cAAajE,SAHjC,OAEOL,EAFP,OAMCkC,QAAQC,IAAI,cAAenC,EAASK,MAEpCG,EAASnB,EAAQW,EAASK,OAC1BO,aAAaE,QAAQ,QAASd,EAASK,KAAKU,OAT7C,gDAYCH,aAAaI,WAAW,SAZzB,yDAAP,yDIFoB,mBAGJ,0CAE0B,IAAzB1B,EAAKiF,SAAStC,OAAe,gEAA0C3C,EAAKiF,SAASC,KAAI,SAACtB,EAASvB,GAChG,OAAO,qBAAKF,UAAU,OAAf,SACH,sBAAKA,UAAU,eAAf,UACI,0DAA6ByB,EAAQuB,OAArC,OACA,6CAAgBvB,EAAQoB,eACxB,yCAAYpB,EAAQ7C,YAJMsB,kBCxK7C+C,EAAQ,SAACpC,GAGlB,IAAMpD,EAAcqD,aAAY,SAAAC,GAAK,OAAIA,EAAMlD,KAAKJ,YAAYyF,SAEhE,OACI,qBAAKlD,UAAU,OAAf,SAEKvC,EAAYsF,KAAI,SAAClF,EAAMqC,GAAP,OAAc,cAAC,EAAD,CAAMrC,KAAMA,EAAMsF,QAAS1F,EAAsByE,MAAOrB,EAAMqB,OAAjBhC,SCTjF,IAAMkD,EAAgB,SAACvC,GAAW,IAAD,EACJpB,mBAAS,CACrCtB,KAAM,GACNqE,YAAa,GACbF,KAAM,GACNC,OAAQ,GACRG,MAAO,GACPN,OAAQ,KAPwB,mBAC7BiB,EAD6B,KACnBC,EADmB,KAU9BC,EAAiB,SAAC1D,GACpByD,EAAY,2BACLD,GADI,kBACOxD,EAAMC,OAAO3B,KAAO0B,EAAMC,OAAOC,UAIjDhB,EAAWwB,cAEX1C,EAAOiD,aAAY,SAAAC,GAAK,OAAIA,EAAMlD,KAAKJ,YAAYI,QAGnD2F,EAAc,WCpBjB,IAAmBtD,EAAI/B,EAAMiE,EAAQE,EAAMC,EAAQG,EAAOF,EDqBzDzD,GCrBkBmB,EDsBdrC,EAAKqC,GCtBa/B,EDuBlBkF,EAASlF,KCvBeiE,EDwBxBiB,EAASjB,OCxBuBE,EDyBhCe,EAASf,KCzB6BC,ED0BtCc,EAASd,OC1BqCG,ED2B9CW,EAASX,MC3B4CF,ED4BrDa,EAASb,YC3BjB,uCAAO,WAAMzD,GAAN,eAAAX,EAAA,+EAEwBC,IAAMC,KAAN,sDAAkE,CACrF4B,KAAI/B,OAAMiE,SAAQE,OAAMC,SAAQG,QAAOF,gBAH5C,OAEOjE,EAFP,OAMCQ,EAASnB,EAAQW,EAASK,OAC1BO,aAAaE,QAAQ,QAASd,EAASK,KAAKU,OAP7C,gDAUCH,aAAaI,WAAW,SAVzB,yDAAP,yDD+BA,OAAO,qBAAKS,UAAWa,EAAMqB,MAAtB,SAEH,qBAAKlC,UAAU,4BAAf,SAEI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,6CACA,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,0BAAf,SACI,gCAEI,sBAAKA,UAAU,eAAf,UACI,uBACIC,YAAY,OACZC,GAAG,OACHpC,KAAK,OACLK,KAAK,OACLgC,SAAUoD,IAEd,uBAAOnD,QAAQ,OAAf,sBAGJ,sBAAKJ,UAAU,eAAf,UACI,uBACIC,YAAY,SACZC,GAAG,SACHpC,KAAK,OACLK,KAAK,SACLgC,SAAUoD,IAEd,uBAAOnD,QAAQ,SAAf,oBAGJ,sBAAKJ,UAAU,eAAf,UACI,uBACIC,YAAY,QACZC,GAAG,QACHpC,KAAK,OACLK,KAAK,QACLgC,SAAUoD,IAEd,uBAAOnD,QAAQ,QAAf,uBAGJ,sBAAKJ,UAAU,eAAf,UACI,uBACIC,YAAY,OACZC,GAAG,OACHpC,KAAK,OACLK,KAAK,OACLgC,SAAUoD,IAEd,uBAAOnD,QAAQ,OAAf,qBAGJ,sBAAKJ,UAAU,eAAf,UACI,uBACIC,YAAY,SACZC,GAAG,SACHpC,KAAK,OACLK,KAAK,SACLgC,SAAUoD,IAEd,uBAAOnD,QAAQ,SAAf,uBAIJ,sBAAKJ,UAAU,eAAf,UACI,uBACIC,YAAY,cACZC,GAAG,cACHpC,KAAK,OACLK,KAAK,cACLgC,SAAUoD,IAEd,uBAAOnD,QAAQ,cAAf,iCAMZ,sBAAKJ,UAAU,cAAf,WAOyC,KALjB,KAAlBqD,EAASlF,MACa,KAApBkF,EAASjB,QACS,KAAlBiB,EAASf,MACW,KAApBe,EAASd,QACU,KAAnBc,EAASX,OACgB,KAAzBW,EAASb,aAAgC,wBACrCxC,UAAU,aACVK,QAAS,WACLmD,IACA3C,EAAMM,SAASN,EAAM4C,gBAJY,iBASzC,wBACIzD,UAAU,WACVK,QAAS,WACL7B,OAAOC,EAAEC,MAAM,CAAEC,KAAM,+BAH/B,iBASJ,wBACIqB,UAAU,MACVK,QAAS,kBAAMQ,EAAMM,SAASN,EAAM4C,gBAFxC,mCEpFbC,MA7Cf,WAAgB,IAAD,EAEajE,mBAAS,WAFtB,mBAENyC,EAFM,KAECf,EAFD,KAIPpC,EAAWwB,cAEX7C,EAASoD,aAAY,SAAAC,GAAK,OAAIA,EAAMlD,KAAKH,UAY/C,OANAiG,qBAAU,WAER5E,EAASD,OAER,IAGD,cAAC,IAAD,UACE,sBAAKkB,UAAU,YAAf,UACE,cAAC,EAAD,CAAQmB,SAAUA,IAChBzD,EAQA,cAAC,IAAD,UAEE,eAAC,IAAD,WACE,cAAC,EAAD,CAAe+F,YAzBP,WAClB,MAAO,WAwB4CtC,SAAUA,EAAUe,MAAOA,IACpE,cAAC,EAAD,CAAOA,MAAOA,SAXlB,eAAC,IAAD,WAEE,cAAC,IAAD,CAAO0B,OAAK,EAACC,KAAM,gBAAiBC,UAAWtE,IAC/C,cAAC,IAAD,CAAOoE,OAAK,EAACC,KAAM,SAAUC,UAAWxD,aC5BrCyD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wBCDRQ,EAAcC,0BAAgB,CAChC5G,KXKW,WAAoD,IAA/BkD,EAA8B,uDAAtBvD,EAAckH,EAAQ,uCAC9D,OAAQA,EAAO5G,MACX,KAAKV,EACD,OAAO,2BACA2D,GADP,IAEItD,YAAaiH,EAAO3G,QACpBJ,MAAM,EACND,QAAQ,IAEhB,KAAKJ,EACD,OAAO,2BACAyD,GADP,IAEItD,YAAaiH,EAAO3G,QACpBL,QAAQ,EACRC,MAAM,IAEd,KAAKJ,EACD,OAAO,2BACAwD,GADP,IAEItD,YAAaiH,EAAO3G,QACpBL,QAAQ,EACRC,MAAM,IAEd,KAAKN,EAED,OADA8B,aAAaI,WAAW,SACjB,2BACAwB,GADP,IAEItD,YAAa,GACbC,QAAQ,EACRC,MAAM,IAEd,QACI,OAAOoD,MWlCN4D,EAAQC,sBAAYJ,EAAaK,8BAAoBC,0BAAgBC,OCFlFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.adc2fba1.chunk.js","sourcesContent":["const SET_USER = \"SET_USER\"\r\nconst LOGOUT = \"LOG_OUT\"\r\nconst USERS_LIST = \"USERS_LIST\"\r\nconst GROUPS_LIST = \"GROUPS_LIST \"\r\n\r\n\r\nconst defaultState = {\r\n    currentUser: {},\r\n    isAuth: false,\r\n    list: true,\r\n}\r\n\r\nexport default function userReducer(state = defaultState, action) {\r\n    switch (action.type) {\r\n        case SET_USER:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload,\r\n                list: false,\r\n                isAuth: true,\r\n            }\r\n        case USERS_LIST:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload,\r\n                isAuth: true,\r\n                list: true,\r\n            }\r\n        case GROUPS_LIST:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload,\r\n                isAuth: true,\r\n                list: false,\r\n            }\r\n        case LOGOUT:\r\n            localStorage.removeItem(\"token\")\r\n            return {\r\n                ...state,\r\n                currentUser: {},\r\n                isAuth: false,\r\n                list: false,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUser = user => ({ type: SET_USER, payload: user })\r\n\r\nexport const setList = user => ({ type: USERS_LIST, payload: user })\r\n\r\nexport const setGroupList = user => ({ type: GROUPS_LIST, payload: user })\r\n\r\nexport const logOut = () => ({ type: LOGOUT })","import axios from \"axios\"\r\nimport { setUser, setList } from \"../reducers/userRed\"\r\n\r\n\r\n\r\n\r\nexport const registration = async (email, password, name) => {\r\n\r\n    try {\r\n        const response = await axios.post(\"https://app-23456789.herokuapp.com/api/auth/registration\", {\r\n            email,\r\n            password,\r\n            name\r\n        })\r\n\r\n        window.M.toast({ html: response.data.message })\r\n\r\n    } catch (error) {\r\n        window.M.toast({ html: error.response.data.message })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const login = (email, password) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.post(\"https://app-23456789.herokuapp.com/api/auth/login\", {\r\n                email, password\r\n            })\r\n            console.log(\"Login\", response.data)\r\n            dispatch(setList(response.data))\r\n            localStorage.setItem(\"token\", response.data.token)\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const Update = (name, id, currentId) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.post(`https://app-23456789.herokuapp.com/api/auth/update`, {\r\n                name, id, currentId\r\n            })\r\n\r\n            dispatch(setList(response.data))\r\n            localStorage.setItem(\"token\", response.data.token)\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const delListItem = (id, currentId) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.post(`https://app-23456789.herokuapp.com/api/auth/delItem`, {\r\n                id, currentId\r\n            })\r\n\r\n            window.M.toast({ html: response.data.message })\r\n            dispatch(setList(response.data))\r\n\r\n            localStorage.setItem(\"token\", response.data.token)\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const Auth = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get(`https://app-23456789.herokuapp.com/api/auth/auth`, {\r\n                headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\r\n            })\r\n\r\n            dispatch(setList(response.data))\r\n\r\n            localStorage.setItem(\"token\", response.data.token)\r\n        } catch (error) {\r\n            localStorage.removeItem(\"token\")\r\n        }\r\n    }\r\n}\r\n\r\nexport const SortFirstWord = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get(`https://app-23456789.herokuapp.com/api/auth/sortWord`, {\r\n                headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\r\n            })\r\n            \r\n            dispatch(setList(response.data))\r\n\r\n            localStorage.setItem(\"token\", response.data.token)\r\n        } catch (error) {\r\n            localStorage.removeItem(\"token\")\r\n        }\r\n    }\r\n}\r\n\r\nexport const SortCount = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get(`https://app-23456789.herokuapp.com/api/auth/sortCount`, {\r\n                headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\r\n            })\r\n            \r\n            dispatch(setList(response.data))\r\n\r\n            localStorage.setItem(\"token\", response.data.token)\r\n        } catch (error) {\r\n            localStorage.removeItem(\"token\")\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const ListUser = () => {\r\n\r\n    return async dispatch => {\r\n\r\n        try {\r\n            const response = await axios.get(`https://app-23456789.herokuapp.com/api/auth/users`, {\r\n                headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\r\n            })\r\n\r\n            dispatch(setList(response.data))\r\n\r\n            localStorage.setItem(\"token\", response.data.token)\r\n        } catch (error) {\r\n            localStorage.removeItem(\"token\")\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const update = (id, name) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.post(\"https://app-23456789.herokuapp.com/api/auth/updateName\", {\r\n                id, name\r\n            })\r\n\r\n            dispatch(setUser(response.data))\r\n\r\n            window.M.toast({ html: response.data.message })\r\n            localStorage.setItem(\"token\", response.data.token)\r\n        } catch (error) {\r\n            localStorage.removeItem(\"token\")\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function createComment(id, productId, description, data) {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.post(`https://app-23456789.herokuapp.com/api/auth/comments`, {\r\n                id, productId, description, data\r\n            })\r\n\r\n            console.log(\"discription\", response.data)\r\n\r\n            dispatch(setList(response.data))\r\n            localStorage.setItem(\"token\", response.data.token)\r\n\r\n        } catch (error) {\r\n            localStorage.removeItem(\"token\")\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect, useContext } from \"react\"\r\nimport { registration } from \"../../actions/user\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { textareaAutoResize } from \"materialize-css\"\r\n\r\n\r\nexport const Registration = () => {\r\n    const [form, setForm] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        name: \"\"\r\n    })\r\n\r\n    const changeHandler = event => {\r\n\r\n        setForm({\r\n            ...form, [event.target.name]: event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s6 offset-s3\">\r\n                <h1>Registartion</h1>\r\n                <div className=\"card blue darken-1\">\r\n                    <div className=\"card-content white-text\">\r\n                \r\n                        <div>\r\n\r\n                            <div className=\"input-field \">\r\n                                <input\r\n                                    placeholder=\"email\"\r\n                                    id=\"email\"\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"email\">Email</label>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"input-field \">\r\n                                <input\r\n                                    placeholder=\"password\"\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"password\">Password</label>\r\n                            </div>\r\n\r\n                            <div className=\"input-field \">\r\n                                <input\r\n                                    placeholder=\"you name\"\r\n                                    id=\"text\"\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"text\">Name</label>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n\r\n\r\n                        <button\r\n                            className=\"btn yellow\"\r\n                            onClick={() => {\r\n                                registration(\r\n                                    form.email,\r\n                                    form.password,\r\n                                    form.name,\r\n                                )\r\n                            }}\r\n                        >\r\n                            Регистрация\r\n                    </button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { login } from \"../../actions/user\"\r\n\r\nexport const Login = () => {\r\n    const [form, setForm] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const changeHandler = event => {\r\n        setForm({\r\n            ...form, [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s6 offset-s3\">\r\n                <h1>Log In</h1>\r\n                <div className=\"card blue darken-1\">\r\n                    <div className=\"card-content white-text\">\r\n                 \r\n                        <div>\r\n\r\n                            <div className=\"input-field \">\r\n                                <input\r\n                                    placeholder=\"email\"\r\n                                    id=\"email\"\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"email\">Email</label>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"input-field \">\r\n                                <input\r\n                                    placeholder=\"password\"\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"password\">Password</label>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n\r\n\r\n                        {form.password.length < 6 ? <button\r\n                            className=\" btn greey \"\r\n                        >\r\n                            open\r\n                    </button> : <button\r\n                            className=\" btn yellow \"\r\n                            onClick={() => dispatch(login(form.email, form.password))}\r\n                        >\r\n                            open\r\n                    </button>}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { NavLink } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { logOut } from \"../../reducers/userRed\"\r\nimport { SortFirstWord } from \"../../actions/user\"\r\nimport { SortCount } from \"../../actions/user\"\r\nimport { Auth } from \"../../actions/user\"\r\n\r\n\r\nexport const Header = (props) => {\r\n    const isAuth = useSelector(state => state.user.isAuth)\r\n    const dispatch = useDispatch()\r\n    return <div className=\"card\">\r\n        <div className=\"card-content nav-wrapper blue-grey darken-1\">\r\n            <nav className=\" blue-grey darken-1\">\r\n\r\n                <a href=\"#!\" className=\"brand-logo\"> <span>Shop-Onlyne</span></a>\r\n                <a href=\"#\" data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">Shop-Onlyne</i></a>\r\n                <ul className=\"right hide-on-med-and-down\">\r\n\r\n                    {!isAuth && <li><NavLink to=\"/login\">Log in</NavLink></li>}\r\n                    {!isAuth && <li><NavLink to=\"/registartion\">Registartion</NavLink></li>}\r\n\r\n                    {isAuth &&\r\n                        <div>\r\n                            <button className=\"btn__sort\" onClick={() => dispatch(SortFirstWord())} >Sort A-Z</button>\r\n                            <button className=\"btn__sort\" onClick={() => dispatch(SortCount())} >Sort for count</button>\r\n                            <button className=\"btn__sort\" onClick={() => dispatch(Auth())} >Initial list</button>\r\n                            <button className=\"btn yellow \" onClick={() => props.setModal(\"displaynon\")} >Add Item</button>\r\n                            <button className=\"btn\" onClick={() => dispatch(logOut())} >Log out</button>\r\n                        </div>\r\n                    }\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    </div>\r\n}","import { useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { delListItem } from \"../../actions/user\"\r\nimport { Update } from \"../../actions/user\"\r\nimport { createComment } from \"../../actions/user\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\n\r\n\r\nexport const User = (props) => {\r\n    const [reName, setReName] = useState({\r\n        user: props.user.name,\r\n    })\r\n\r\n    const [active, setActive] = useState(\"delete__block-none\")\r\n\r\n    const [comment, setComment] = useState(\"\")\r\n\r\n    const user = props.user\r\n\r\n    const date = new Date().toLocaleString();\r\n\r\n    const modalList = () => {\r\n        if (props.modal === \"display\") {\r\n            return \"usernone\"\r\n        } else {\r\n            return \"user\"\r\n        }\r\n    }\r\n\r\n\r\n    const currentId = useSelector(state => state.user.currentUser.user.id)\r\n\r\n\r\n    const changeUser = event => {\r\n        setReName({\r\n            ...reName, [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const Comment = event => {\r\n        setComment({\r\n            ...comment, [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const volid = () => {\r\n        dispatch(delListItem(user._id, currentId))\r\n    }\r\n\r\n\r\n    const changeUserButton = () => {\r\n        dispatch(Update(reName.user, user._id, currentId))\r\n    }\r\n\r\n\r\n    const addComment = () => {\r\n        dispatch(createComment(currentId, user._id, comment.comment, date))\r\n    }\r\n\r\n\r\n\r\n    return <div className={modalList()} >\r\n\r\n\r\n        <div className=\"card\" >\r\n            <div className=\"card-content\">\r\n\r\n\r\n                <h2>name: {user.name}</h2>\r\n                <img src={user.imgURL} alt={user.name} />\r\n                <h5>size:  {user.size}</h5>\r\n                <h5> weidht:   {user.weidht}</h5>\r\n                <p></p>\r\n\r\n                <h5>Description</h5>\r\n                <p className=\"discription\" >{user.discription.slice(0, 100)} . . .</p>\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"card-content\">\r\n\r\n\r\n                <button className=\"waves-effect waves-light btn activator \">More detail</button>\r\n\r\n\r\n                {active === \"delete__block-active\" ?\r\n                    <button className=\"waves-effect yellow btn \" onClick={() => setActive(\"delete__block-none\")}>close</button>\r\n                    :\r\n                    <button className=\"waves-effect grey btn \" onClick={() => setActive(\"delete__block-active\")}>delete</button>\r\n                }\r\n\r\n                <div className={active}>\r\n                    <span>If you want to do this click this button</span>\r\n                    <button className=\"waves-effect red btn\" onClick={() => {\r\n                        volid()\r\n                        setActive(\"delete__block-none\")\r\n                    }\r\n                    }>\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <div className=\"card-reveal\">\r\n                <span className=\"card-title grey-text text-darken-4\"><i className=\"right\">close</i></span>\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"card-content\">\r\n                        <h3>More Detal</h3>\r\n\r\n                        <h4> item weight:  {user.weidht}</h4>\r\n                        <h4> item size:  {user.size}</h4>\r\n                        <h4> item count:  {user.count}</h4>\r\n                        <h3>Discription</h3>\r\n                        <p className=\"discription\" >{user.discription}</p>\r\n                    </div>\r\n\r\n                    <div className=\"card-content\">\r\n                        <h3>Update item</h3>\r\n                        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolorem quis, asperiores ipsum exercitationem omnis\r\n                            libero a voluptate aliquam quae, eligendi eos quibusdam sit fuga nam, officiis\r\n                            est laboriosam. Modi, laborum.\r\n                        </p>\r\n                        <div className=\"input-field \">\r\n                            <input\r\n                                id=\"Update user\"\r\n                                type=\"text\"\r\n                                name=\"user\"\r\n                                onChange={changeUser}\r\n                            />\r\n                            <label htmlFor=\"password\">Update name</label>\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        <button className=\"waves-effect waves-light btn activator\" onClick={changeUserButton}>Update</button>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"card-content\">\r\n                        <h3>Add Comment</h3>\r\n                        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolorem quis, asperiores ipsum exercitationem omnis\r\n                            libero a voluptate aliquam quae, eligendi eos quibusdam sit fuga nam, officiis\r\n                            est laboriosam. Modi, laborum.\r\n                        </p>\r\n                        <div className=\"input-field \">\r\n                            <input\r\n                                id=\"comment\"\r\n                                type=\"text\"\r\n                                name=\"comment\"\r\n                                onChange={Comment}\r\n                            />\r\n                            <label htmlFor=\"comment\">Comment</label>\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        <button className=\"waves-effect waves-light btn activator\" onClick={addComment} >ADD</button>\r\n                    </div>\r\n\r\n                    <h3>Comments</h3>\r\n\r\n                    {user.comments.length === 0 ? <h5>There are no comments here yet</h5> : user.comments.map((comment, id) => {\r\n                        return <div className=\"card\" key={id}  >\r\n                            <div className=\"card-content\">\r\n                                <p>Author of this comment:  {comment.author} </p>\r\n                                <h5>  comment: {comment.description}</h5>\r\n                                <p>  data: {comment.data}</p>\r\n                            </div>\r\n\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div >\r\n}\r\n\r\n\r\n","import { useSelector } from \"react-redux\"\r\nimport { User } from \"./user\"\r\n\r\n\r\n\r\nexport const Users = (props) => {\r\n\r\n\r\n    const currentUser = useSelector(state => state.user.currentUser.items)\r\n\r\n    return (\r\n        <div className=\"card\">\r\n\r\n            {currentUser.map((user, id) => <User user={user} current={currentUser} key={id} modal={props.modal} />)}\r\n\r\n        </div>\r\n    )\r\n}","import React, { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { createDir } from \"../../actions/file\"\r\n\r\nexport const NavCreatePost = (props) => {\r\n    const [groupInf, setGroupInf] = useState({\r\n        name: \"\",\r\n        discription: \"\",\r\n        size: \"\",\r\n        weidht: \"\",\r\n        count: \"\",\r\n        imgURL: \"\",\r\n    })\r\n\r\n    const createGroupInf = (event) => {\r\n        setGroupInf({\r\n            ...groupInf, [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const user = useSelector(state => state.user.currentUser.user)\r\n\r\n\r\n    const createGroup = () => {\r\n        dispatch(createDir(\r\n            user.id,\r\n            groupInf.name,\r\n            groupInf.imgURL,\r\n            groupInf.size,\r\n            groupInf.weidht,\r\n            groupInf.count,\r\n            groupInf.discription,\r\n        ))\r\n    }\r\n\r\n    return <div className={props.modal}>\r\n\r\n        <div className=\"card  darken-1 black-text\">\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col s6 offset-s3\">\r\n                    <h1>Create item</h1>\r\n                    <div className=\"card blue darken-1\">\r\n                        <div className=\"card-content white-text\">\r\n                            <div>\r\n\r\n                                <div className=\"input-field \">\r\n                                    <input\r\n                                        placeholder=\"name\"\r\n                                        id=\"name\"\r\n                                        type=\"text\"\r\n                                        name=\"name\"\r\n                                        onChange={createGroupInf}\r\n                                    />\r\n                                    <label htmlFor=\"name\"> name</label>\r\n                                </div>\r\n\r\n                                <div className=\"input-field \">\r\n                                    <input\r\n                                        placeholder=\"imgURL\"\r\n                                        id=\"imgURL\"\r\n                                        type=\"text\"\r\n                                        name=\"imgURL\"\r\n                                        onChange={createGroupInf}\r\n                                    />\r\n                                    <label htmlFor=\"imgURL\">URL</label>\r\n                                </div>\r\n\r\n                                <div className=\"input-field \">\r\n                                    <input\r\n                                        placeholder=\"count\"\r\n                                        id=\"count\"\r\n                                        type=\"text\"\r\n                                        name=\"count\"\r\n                                        onChange={createGroupInf}\r\n                                    />\r\n                                    <label htmlFor=\"count\"> count</label>\r\n                                </div>\r\n\r\n                                <div className=\"input-field \">\r\n                                    <input\r\n                                        placeholder=\"size\"\r\n                                        id=\"size\"\r\n                                        type=\"text\"\r\n                                        name=\"size\"\r\n                                        onChange={createGroupInf}\r\n                                    />\r\n                                    <label htmlFor=\"size\">size</label>\r\n                                </div>\r\n\r\n                                <div className=\"input-field \">\r\n                                    <input\r\n                                        placeholder=\"weidht\"\r\n                                        id=\"weidht\"\r\n                                        type=\"text\"\r\n                                        name=\"weidht\"\r\n                                        onChange={createGroupInf}\r\n                                    />\r\n                                    <label htmlFor=\"weidht\">weidht</label>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"input-field \">\r\n                                    <input\r\n                                        placeholder=\"discription\"\r\n                                        id=\"discription\"\r\n                                        type=\"text\"\r\n                                        name=\"discription\"\r\n                                        onChange={createGroupInf}\r\n                                    />\r\n                                    <label htmlFor=\"discription\">discription</label>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-action\">\r\n\r\n                            {(groupInf.name === \"\" ||\r\n                                groupInf.imgURL === \"\" ||\r\n                                groupInf.size === \"\" ||\r\n                                groupInf.weidht === \"\" ||\r\n                                groupInf.count === \"\" ||\r\n                                groupInf.discription === \"\") === false ? <button\r\n                                    className=\"btn yellow\"\r\n                                    onClick={() => {\r\n                                        createGroup()\r\n                                        props.setModal(props.modalWindow())\r\n                                    }} >\r\n                                ADD\r\n                            </button>\r\n                                :\r\n                                <button\r\n                                    className=\"btn grey\"\r\n                                    onClick={() => {\r\n                                        window.M.toast({ html: \"please fill in all fields\" })\r\n                                    }} >\r\n                                    ADD\r\n                                </button>\r\n                            }\r\n\r\n                            <button\r\n                                className=\"btn\"\r\n                                onClick={() => props.setModal(props.modalWindow())} >\r\n                                Close\r\n                            </button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n}","import axios from 'axios'\r\nimport { setList } from \"../reducers/userRed\"\r\n\r\n\r\n\r\nexport function createDir(id, name, imgURL, size, weidht, count, discription) {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.post(`https://app-23456789.herokuapp.com/api/group/groups`, {\r\n                id, name, imgURL, size, weidht, count, discription\r\n            })\r\n\r\n            dispatch(setList(response.data))\r\n            localStorage.setItem(\"token\", response.data.token)\r\n\r\n        } catch (error) {\r\n            localStorage.removeItem(\"token\")\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useEffect } from \"react\"\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\r\nimport { Registration } from \"./components/registration-and-login/registration.jsx\"\r\nimport { Login } from \"./components/registration-and-login/Login.jsx\"\r\nimport { Header } from \"./components/navigation-and-search-components/header.jsx\"\r\nimport \"materialize-css\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Auth } from \"./actions/user\"\r\nimport { Users } from \"./components/lists/users\"\r\nimport { NavCreatePost } from \"./components/navigation-and-search-components/navCreatePost\"\r\nimport { useState } from \"react\"\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [modal, setModal] = useState(\"display\")\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const isAuth = useSelector(state => state.user.isAuth)\r\n\r\n  const modalWindow = () => {\r\n    return \"display\"\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    dispatch(Auth())\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"container\" >\r\n        <Header setModal={setModal} />\r\n        {!isAuth ?\r\n          <Switch>\r\n\r\n            <Route exact path={\"/registartion\"} component={Registration} />\r\n            <Route exact path={\"/login\"} component={Login} />\r\n\r\n          </Switch>\r\n          :\r\n          <Switch>\r\n\r\n            <Route >\r\n              <NavCreatePost modalWindow={modalWindow} setModal={setModal} modal={modal} />\r\n              <Users modal={modal} />\r\n            </Route>\r\n\r\n\r\n          </Switch>\r\n        }\r\n      </div>\r\n    </BrowserRouter >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport thunk from \"redux-thunk\"\r\nimport userReducer from \"./userRed\"\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store } from \"./reducers\"\r\nimport { Provider } from \"react-redux\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}